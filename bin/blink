#!/usr/bin/env python

import os
import sys

from application import log


def except_hook(exception_type, exception_value, traceback):
    sys.__excepthook__(exception_type, exception_value, traceback)

sys.excepthook = except_hook  # pyqt5 (>=5.5) will abort if an exception happens in python code when called from Qt, unless we define this

log.level.current = log.level.WARNING

frozen = hasattr(sys, 'frozen')

# We need to mangle Python's import path in case blink is run directly from
# the bin/ directory.
script_dir = os.path.dirname(os.path.realpath(sys.executable if frozen else __file__))
parent_dir = os.path.dirname(script_dir)
if os.path.basename(script_dir) == 'bin' and os.path.exists(os.path.join(parent_dir, 'blink', '__init__.py')):
    # Insert the parent path just before the existing script's path. We need
    # to do this in order to work with debuggers which insert their own paths
    # at the beginning. The script's path is the last Python itself inserted
    # so we should insert just before that.
    try:
        position = sys.path.index(script_dir)
    except ValueError:
        position = 0
    sys.path.insert(position, parent_dir)


if frozen:
    from StringIO import StringIO
    sys.stdout = sys.stderr = StringIO()


if __name__ == '__main__':
    from blink import Blink
    blink = Blink()
    blink.run()

